let pokemonRepository = (function () {
  let e = [],
    t = 'https://pokeapi.co/api/v2/pokemon/?limit=150',
    o = document.querySelector('#search-bar');
  function n(t) {
    'object' == typeof t && 'name' in t && 'detailsUrl' in t
      ? e.push(t)
      : console.log('pokemon is not correct');
  }
  async function a(e) {
    i();
    let t = e.detailsUrl;
    try {
          const e = await fetch(t);
          const t_1 = await e.json();
          (e.imageUrl = t_1.sprites.other.dream_world.front_default),
              (e.height = t_1.height);
          l();
      }
      catch (e_1) {
          console.error(e_1);
      }
  }
  function i() {
    (loadImage = $('.loadingImage')), loadImage.addClass('showImg');
  }
  function l() {
    (loadImage = $('.loadingImage')), loadImage.removeClass('showImg');
  }
  function s(e) {
    a(e).then(function () {
      let t = $('.modal-body'),
        o = $('.modal-title');
      $('.modal-header');
      o.empty(), t.empty();
      let n = $('<h1>' + e.name + '</h1>'),
        a = $('<img class="modal-img" style="width:50%">');
      a.attr('src', e.imageUrl);
      let i = $('<p>Height: ' + e.height + '</p>');
      o.append(n), t.append(a), t.append(i);
    });
  }
  return (
    o.addEventListener('input', function () {
      let e = document.querySelectorAll('.list-group-item'),
        t = o.value.toUpperCase();
      e.forEach(function (e) {
        console.log(e.innerText),
          e.innerText.toUpperCase().indexOf(t) > -1
            ? (e.style.display = '')
            : (e.style.display = 'none');
      });
    }),
    {
      getAll: function () {
        return e;
      },
      add: n,
      addListItem: function (e) {
        let t = $('.list-group'),
          o = $(
            '<div class="list-group-item col-lg-6 col-md-8 col-sm-12 mx-auto mb-2"></div>'
          ),
          n = $('<button></button>');
        n.text(e.name),
          n.addClass('btn btn-block btn-dark'),
          n.attr('data-target', '#pokemonModal'),
          n.attr('data-toggle', 'modal'),
          o.append(n),
          t.append(o),
          n.on('click', function () {
            s(e);
          });
      },
      loadList: function () {
        return (
          i(),
          fetch(t)
            .then(function (e) {
              return e.json();
            })
            .then(function (e) {
              e.results.forEach(function (e) {
                n({ name: e.name, detailsUrl: e.url });
              });
            })
            .then(function () {
              l();
            })
            .catch(function (e) {
              console.error(e);
            })
        );
      },
      loadDetails: a,
      showDetails: s,
      showLoadingMessage: i,
      hideLoadingMessage: l,
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.showLoadingMessage(),
    setTimeout(function () {
      pokemonRepository.getAll().forEach(function (e) {
        pokemonRepository.addListItem(e);
      }),
        pokemonRepository.hideLoadingMessage();
    }, 2e3);
});
